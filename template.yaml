AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31

Parameters:
  Stage:
    Type: String
    Default: dev
  QpayClientIdParameter:
    Type: String
    Default: "/param/quiz-stack/QPAY_CLIENT_ID"
  QpayClientSecretParameter:
    Type: String
    Default: "/param/quiz-stack/QPAY_CLIENT_SECRET"
  QpayInvoiceCodeParameter:
    Type: String
    Default: "/param/quiz-stack/QPAY_INVOICE_CODE"
  QpayUrlParameter:
    Type: String
    Default: "/param/quiz-stack/QPAY_URL"
  BaseUrlParameter:
    Type: String
    Default: "/param/quiz-stack/BASE_URL"
  GoogleClientIdParameter:
    Type: String
    Default: "/param/quiz-stack/GOOGLE_CLIENT_ID"
  GoogleClientSecretParameter:
    Type: String
    Default: "/param/quiz-stack/GOOGLE_CLIENT_SECRET"
  AwsRegionParameter:
    Type: String
    Default: "/param/quiz-stack/AWS_REGION"
  GitHubOwner:
    Type: String
    Default: bayaroch
  GitHubRepo:
    Type: String
    Default: quizz-be
  GitHubBranch:
    Type: String
    Default: main
  GitHubConnectionArn:
    Type: String
    Default: "arn:aws:codeconnections:us-east-1:535002852577:connection/e490710f-c569-428d-9f78-3076307f4f7a"

Resources:
  # 1. S3 Buckets
  ImagesBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "${AWS::StackName}-images-${AWS::AccountId}-${AWS::Region}"
      VersioningConfiguration:
        Status: Enabled

  QuizBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "${AWS::StackName}-quiz-${AWS::AccountId}-${AWS::Region}"
      VersioningConfiguration:
        Status: Enabled

  ResultBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "${AWS::StackName}-result-${AWS::AccountId}-${AWS::Region}"
      VersioningConfiguration:
        Status: Enabled
      LifecycleConfiguration:
        Rules:
          - Id: ResultExpirationRule
            Status: Enabled
            Transitions:
              - TransitionInDays: 7
                StorageClass: GLACIER
            ExpirationInDays: 60

  ApiLambdaBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "${AWS::StackName}-api-lambda-${AWS::AccountId}-${AWS::Region}"
      VersioningConfiguration:
        Status: Enabled

  # 2. IAM Roles
  ApiLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: ApiLambdaPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: arn:aws:logs:*:*:*
              - Effect: Allow
                Action:
                  - dynamodb:GetItem
                  - dynamodb:PutItem
                  - dynamodb:UpdateItem
                  - dynamodb:DeleteItem
                  - dynamodb:Scan
                  - dynamodb:Query
                  - dynamodb:DescribeTable
                  - dynamodb:UpdateTable
                  - dynamodb:CreateTable
                Resource:
                  - !Sub "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${AWS::StackName}-${Stage}-*"
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:DeleteObject
                  - s3:ListBucket
                Resource:
                  - !Sub "${ImagesBucket.Arn}/*"
                  - !Sub "${QuizBucket.Arn}/*"
                  - !Sub "${ResultBucket.Arn}/*"
                  - !Sub "${ApiLambdaBucket.Arn}/*"
                  - !Sub "${ImagesBucket.Arn}"
                  - !Sub "${QuizBucket.Arn}"
                  - !Sub "${ResultBucket.Arn}"
                  - !Sub "${ApiLambdaBucket.Arn}"
              - Effect: Allow
                Action:
                  - ssm:GetParameter
                  - ssm:GetParameters
                Resource: !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/param/${AWS::StackName}/*"

  # 3. Lambda Functions
  ApiLambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: ./api-lambda
      Handler: dist/src/index.handler
      Runtime: nodejs20.x
      MemorySize: 512
      Timeout: 300
      Events:
        ProxyApiRoot:
          Type: Api
          Properties:
            RestApiId: !Ref ApiGateway
            Path: /{proxy+}
            Method: ANY
      Environment:
        Variables:
          SERVICE: !Ref AWS::StackName
          STAGE: !Ref Stage
          REGION: !Ref AWS::Region
          IMAGES_BUCKET: !Ref ImagesBucket
          QUIZ_BUCKET: !Ref QuizBucket
          RESULT_BUCKET: !Ref ResultBucket
          QPAY_CLIENT_ID_PARAM: !Ref QpayClientIdParameter
          QPAY_CLIENT_SECRET_PARAM: !Ref QpayClientSecretParameter
          QPAY_INVOICE_CODE_PARAM: !Ref QpayInvoiceCodeParameter
          QPAY_URL_PARAM: !Ref QpayUrlParameter
          BASE_URL_PARAM: !Ref BaseUrlParameter
          GOOGLE_CLIENT_ID_PARAM: !Ref GoogleClientIdParameter
          GOOGLE_CLIENT_SECRET_PARAM: !Ref GoogleClientSecretParameter
          AWS_REGION_PARAM: !Ref AwsRegionParameter
      Role: !GetAtt ApiLambdaRole.Arn

  # 4. API Gateways
  ApiGateway:
    Type: AWS::Serverless::Api
    Properties:
      StageName: !Ref Stage
      EndpointConfiguration: REGIONAL
      Cors:
        AllowMethods: "'*'"
        AllowHeaders: "'*'"
        AllowOrigin: "'*'"

  ApiGatewayPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref ApiLambdaFunction
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ApiGateway}/*/*"

  # 5. Custom Domains
  ApiGatewayDomain:
    Type: AWS::ApiGateway::DomainName
    Properties:
      DomainName: api.appquizz.com
      RegionalCertificateArn: arn:aws:acm:us-east-1:535002852577:certificate/fe441473-ae19-4925-a6b0-39fd1d804035
      EndpointConfiguration:
        Types:
          - REGIONAL

  ApiGatewayBasePathMapping:
    Type: AWS::ApiGateway::BasePathMapping
    Properties:
      DomainName: !Ref ApiGatewayDomain
      RestApiId: !Ref ApiGateway
      Stage: !Ref Stage

  # 6. CloudFront Distribution
  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Origins:
          - DomainName: !GetAtt ImagesBucket.RegionalDomainName
            Id: ImagesOrigin
            S3OriginConfig:
              OriginAccessIdentity: ""
          - DomainName: !GetAtt QuizBucket.RegionalDomainName
            Id: QuizOrigin
            S3OriginConfig:
              OriginAccessIdentity: ""
          - DomainName: !GetAtt ResultBucket.RegionalDomainName
            Id: ResultOrigin
            S3OriginConfig:
              OriginAccessIdentity: ""
        Enabled: true
        DefaultCacheBehavior:
          TargetOriginId: ImagesOrigin
          ViewerProtocolPolicy: redirect-to-https
          AllowedMethods:
            - GET
            - HEAD
            - OPTIONS
          CachedMethods:
            - GET
            - HEAD
            - OPTIONS
          ForwardedValues:
            QueryString: false
            Cookies:
              Forward: none
          Compress: true
        CacheBehaviors:
          - PathPattern: "/quiz/*"
            TargetOriginId: QuizOrigin
            ViewerProtocolPolicy: redirect-to-https
            AllowedMethods:
              - GET
              - HEAD
              - OPTIONS
            CachedMethods:
              - GET
              - HEAD
              - OPTIONS
            ForwardedValues:
              QueryString: false
              Cookies:
                Forward: none
            Compress: true
        ViewerCertificate:
          CloudFrontDefaultCertificate: true

  # CodeBuild Project (Renamed)
  CodeBuildProjectV2:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub "${AWS::StackName}-CodeBuild-V2"
      ServiceRole: !GetAtt CodeBuildRoleV2.Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:5.0
        EnvironmentVariables:
          - Name: STAGE
            Value: !Ref Stage
          - Name: AWS_REGION
            Value: !Ref AWS::Region
          - Name: STACK_NAME
            Value: !Ref AWS::StackName
      Source:
        Type: CODEPIPELINE
        BuildSpec: buildspec.yml
      TimeoutInMinutes: 60

  # CodeBuild IAM Role (Renamed)
  CodeBuildRoleV2:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSCloudFormationFullAccess
        - arn:aws:iam::aws:policy/AmazonS3FullAccess
        - arn:aws:iam::aws:policy/AWSLambda_FullAccess
        - arn:aws:iam::aws:policy/AmazonSSMFullAccess
        - arn:aws:iam::aws:policy/AmazonAPIGatewayAdministrator
        - arn:aws:iam::aws:policy/CloudWatchLogsFullAccess
      Policies:
        - PolicyName: CodeBuildCustomPolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - iam:PassRole
                Resource:
                  - !GetAtt ApiLambdaRole.Arn

  # CodePipeline (Renamed)
  CodePipelineV2:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: !Sub "${AWS::StackName}-Pipeline-V2"
      RoleArn: !GetAtt CodePipelineRoleV2.Arn
      ArtifactStore:
        Type: S3
        Location: !Ref ApiLambdaBucket
      Stages:
        - Name: Source
          Actions:
            - Name: GitHubSource
              ActionTypeId:
                Category: Source
                Owner: AWS
                Provider: CodeStarSourceConnection
                Version: "1"
              OutputArtifacts:
                - Name: SourceArtifact
              Configuration:
                ConnectionArn: !Ref GitHubConnectionArn
                FullRepositoryId: !Sub "${GitHubOwner}/${GitHubRepo}"
                BranchName: !Ref GitHubBranch
              RunOrder: 1
        - Name: Build
          Actions:
            - Name: Build
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: "1"
              InputArtifacts:
                - Name: SourceArtifact
              OutputArtifacts:
                - Name: BuildArtifact
              Configuration:
                ProjectName: !Ref CodeBuildProjectV2
              RunOrder: 1

  # CodePipeline IAM Role (Renamed)
  CodePipelineRoleV2:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: CodePipelinePolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:GetBucket*
                  - s3:List*
                Resource:
                  - !Sub "${ApiLambdaBucket.Arn}"
                  - !Sub "${ApiLambdaBucket.Arn}/*"
              - Effect: Allow
                Action:
                  - codebuild:BatchGetBuilds
                  - codebuild:StartBuild
                Resource: !GetAtt CodeBuildProjectV2.Arn
              - Effect: Allow
                Action:
                  - codestar-connections:UseConnection
                Resource: !Ref GitHubConnectionArn
              - Effect: Allow
                Action:
                  - cloudfront:GetDistribution
                  - cloudfront:ListDistributions
                Resource: "*"

Outputs:
  ApiUrl:
    Value: !Sub "https://${ApiGateway}.execute-api.${AWS::Region}.amazonaws.com/${Stage}/"
  CloudFrontDomain:
    Value: !GetAtt CloudFrontDistribution.DomainName
  ImagesBucketName:
    Value: !Ref ImagesBucket
  QuizBucketName:
    Value: !Ref QuizBucket
  ResultBucketName:
    Value: !Ref ResultBucket
  PipelineUrl:
    Value: !Sub "https://${AWS::Region}.console.aws.amazon.com/codesuite/codepipeline/pipelines/${CodePipelineV2}/view?region=${AWS::Region}"
